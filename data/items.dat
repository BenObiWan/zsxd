# This file describes each item of the quest.
# It determines the equipment, the treasures and the pickable items.
# Each group defines an item, and its title is the name identifying the item.
# The following variables are recognized inside the group.
#
# - savegame_variable (integer)
#   If set, the item possession state will be saved in the variable specified.
#   The possession state corresponds to the variant of the item that the player
#   has. It is represented as an integer: 0 if the player has not the item,
#   1 if he has the first variant, etc.
#   If you specify nothing, the item is not saved.
#
# - nb_variants (integer)
#   Number of variants of the item. If the item is saved, then its possession
#   state is equal to 0 if the player has not the item, or a number between 1
#   and nb_variant if he has a variant of the item.
#   The default value is 1.
#
# - initial_variant (integer)
#   Initial possession state of the item (only for items saved). The default
#   value is 0.
#
# - can_be_assigned (boolean)
#   If true, the item can be assigned to an item key from the inventory subscreen
#   and then be used explicitely by pressing this item key.
#   Then the possession state of the item must be saved (i.e. savegame_variable must be set).
#   The default value is false.
#
# - counter (integer)
#   If a counter should be associated to the item, you can indicate here in which
#   savegame variable this counter will be saved.
#   The maximum value of the counter must be defined by limit or limit_for_counter
#   (see below).
#
# - limit (integer)
#   Maximum value of the counter associated to this item.
#
# - limit_for_counter (string)
#   When this item is obtained, the maximum value of the counter of another item
#   (whose id is specified here) is set to a new maximum.
#   The current value is also set to this maximum.
#   The special counters "money", "life" and "magic" are also accepted.
#
# - changes_counter (string)
#   When this item is obtained, the counter of another item (whose id is specified here)
#   is increased to an amount.
#   The special counters "money", "life", "magic" and "small_keys" are also accepted.
#
# - amount (integer)
#   Indicates the amount to increase when changes_counter is defined, or the maximum amount to set
#   when limits_counter is defined. The default value is 1.
#
# - amount_1, amount_2, …, amount_n (integers)
#   Same as amount, but with different amounts depending on what variant of the item
#   is obtained. n is the number of variants.
#
# - probability (integer)
#   Some items are generated randomly, for example the pickable treasures dropped by enemies.
#   If this value is defined, then the item can be generated randomly and with the probability specified.
#   The probability is an integer between 0 and 1000. The sum of probabilities
#   of all items should be lower than 1000. The remaining probability corresponds to
#   the case where no item is genereated.
#
# - probability_1, probability_2, …, probability_n (integers)
#   Same as probability, but with different probabilities for the different variants of the item.
#   n is the number of variants.
#
# - shadow (string)
#   Defines the size of the shadow displayed under the item when it is placed on the ground
#   (for example as a pickable trasure dropped by an enemy). The possible values are
#   none, small or big. The default value is big.
#
# - can_disappear (boolean)
#   When the item is picked up on the ground by the hero (i.e. represented as
#   a pickable treasure), this variable indicates whether the item should disappear
#   after a few seconds. The default value is false.
#
# - brandish_when_picked (boolean)
#   When the item is picked up on the ground by the hero (i.e. represented as
#   a pickable treasure), this variable indicates whether the hero should brandish
#   the item (like an item found in a chest). The default value is true.
#
# - sound_when_picked (string)
#   When the item is picked up on the ground by the hero (i.e. represented as
#   a pickable treasure), this variable indicates what sound is played.
#   The default value is picked_item.
#
# - sound_when_brandished (string)
#   This variable indicates what sound is played when the item is brandished by the
#   player. The default value is treasure.

[feather]
savegame_variable = 1100
can_be_assigned = true

[bombs_counter]
savegame_variable = 1101
can_be_assigned = true
counter = 1024

[bomb]
changes_counter = bombs_counter
nb_variants = 3
amount_1 = 1
amount_2 = 3
amount_3 = 8
probability_1 = 8
probability_2 = 5
probability_3 = 2
brandish_when_picked = false
can_disappear = true

[bomb_bag]
savegame_variable = 1032
limit_for_counter = bombs_counter
nb_variants = 3
amount_1 = 10
amount_2 = 30
amount_3 = 99

[bow]
savegame_variable = 1102
can_be_assigned = true
counter = 1025
nb_variants = 2

[arrow]
changes_counter = bow
nb_variants = 3
amount_1 = 1
amount_2 = 5
amount_3 = 10
probability_1 = 8
probability_2 = 5
probability_3 = 2
brandish_when_picked = false
can_disappear = true
shadow = small

[quiver]
savegame_variable = 1033
limit_for_counter = bow
nb_variants = 3
amount_1 = 10
amount_2 = 30
amount_3 = 99

[boomerang]
savegame_variable = 1103
can_be_assigned = true

[lamp]
savegame_variable = 1104
can_be_assigned = true

[hookshot]
savegame_variable = 1105
can_be_assigned = true

[bottle_1]
savegame_variable = 1106
can_be_assigned = true
nb_variants = 6

[pegasus_shoes]
savegame_variable = 1107
can_be_assigned = true

[mystic_mirror]
savegame_variable = 1108
can_be_assigned = true

[cane_of_somaria]
savegame_variable = 1109
can_be_assigned = true

[apples_counter]
savegame_variable = 1110
can_be_assigned = true
counter = 1028
limit = 10

[apple]
changes_counter = apples_counter
amount = 3

[pains_au_chocolat_counter]
savegame_variable = 1111
can_be_assigned = true
counter = 1026
limit = 10

[pain_au_chocolat]
changes_counter = pains_au_chocolat_counter

[croissants_counter]
savegame_variable = 1112
can_be_assigned = true
counter = 1027
limit = 10

[croissant]
changes_counter = croissants_counter

[bottle_2]
savegame_variable = 1113
can_be_assigned = true
nb_variants = 6

[rock_key]
savegame_variable = 1114

[bone_key]
savegame_variable = 1115

[clay_key]
savegame_variable = 1116

[level_4_way]
savegame_variable = 1117
nb_variants = 3

[flippers]
savegame_variable = 1118

[magic_cape]
savegame_variable = 1119

[bottle_3]
savegame_variable = 1120
can_be_assigned = true
nb_variants = 6

[iron_key]
savegame_variable = 1121

[stone_key]
savegame_variable = 1122

[wooden_key]
savegame_variable = 1123

[ice_key]
savegame_variable = 1124

[glove]
savegame_variable = 1125
nb_variants = 2

[fire_stones_counter]
savegame_variable = 1126
counter = 1029
limit = 3

[fire_stone]
changes_counter = fire_stones_counter

[bottle_4]
savegame_variable = 1127
can_be_assigned = true
nb_variants = 6

[tunic]
savegame_variable = 1128
nb_variants = 3
initial_variant = 1

[sword]
savegame_variable = 1129
nb_variants = 4

[shield]
savegame_variable = 1130
nb_variants = 3

[world_map]
savegame_variable = 1031

[rupee_bag]
savegame_variable = 1034
limit_for_counter = money
nb_variants = 3
initial_variant = 1
amount_1 = 100
amount_2 = 300
amount_3 = 999

[magic_bar]
limit_for_counter = magic
nb_variants = 2
initial_variant = 0
amount_1 = 42
amount_2 = 84

[map]

[compass]

[big_key]

[boss_key]

[small_key]
changes_counter = small_keys
brandish_when_picked = false
sound_when_picked = picked_small_key
shadow = small

[rupee]
changes_counter = money
nb_variants = 6
amount_1 = 1
amount_2 = 5
amount_3 = 20
amount_4 = 50
amount_5 = 100
amount_6 = 300
probability_1 = 50
probability_2 = 15
probability_3 = 5
brandish_when_picked = false
sound_when_picked = picked_rupee
can_disappear = true
shadow = small

[magic_flask]
changes_counter = magic
nb_variants = 2
amount_1 = 6
amount_2 = 42
probability_1 = 25
probability_2 = 8
brandish_when_picked = false
can_disappear = true
shadow = small

[heart]
changes_counter = life
amount = 4
probability = 100
brandish_when_picked = false
can_disappear = true
shadow = small

[heart_container]
sound_when_picked = heart_container
sound_when_brandished = heart_container

[piece_of_heart]
sound_when_picked = piece_of_heart
sound_when_brandished = piece_of_heart

[fairy]
probability = 2
brandish_when_picked = false
can_disappear = true
shadow = none

